upstream host_service {
    server host.docker.internal:6792;
}

upstream frontend {
  server ui-rfsight:6791;
}

server {
  listen 80;
  server_name frontend;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;
  ssl_certificate /etc/nginx/ssl/cert.pem;
  ssl_certificate_key /etc/nginx/ssl/key.pem;
  server_name local.rfsight.com;

  # PRODUCTION APP SERVE
  # location /{
  #   root /usr/share/nginx/html;
  #   try_files $uri $uri/ /index.html;
  # }

  location / {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://frontend/;
    proxy_set_header Host $http_host;
  }

  location = /backend {
    return 302 /backend/;
  }

  location /backend/ {
    proxy_pass http://host_service/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
  }

  location /backend/devices/chart-data/ {
    proxy_pass http://host_service/devices/chart-data;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    # KEEP CONNECTION
    proxy_buffering off;
    proxy_cache off;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
  }

  location ~ /backend/monitor/(?<networkId>.+)/devices-status/ {
    proxy_pass http://host_service/monitor/$networkId/devices-status;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    # KEEP CONNECTION
    proxy_buffering off;
    proxy_cache off;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
  }
}
